{
  "stats": {
    "suites": 4,
    "tests": 37,
    "passes": 37,
    "pending": 0,
    "failures": 0,
    "start": "2021-05-07T19:21:24.459Z",
    "end": "2021-05-07T19:21:24.504Z",
    "duration": 45,
    "testsRegistered": 37,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2adcfe02-aa21-41fa-8ecf-871bcde25d7c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e55351e5-f5f0-4f94-8600-457f4674c19d",
          "title": "Add method unit testing:",
          "fullFile": "D:\\!EPAM'S_COURSES\\GIT_TRAIN\\Auto-JS-2021\\hw_test1\\test\\specs\\addCalculator.spec.js",
          "file": "\\hw_test1\\test\\specs\\addCalculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Add method unit testing:\"",
              "fullTitle": "Add method unit testing: \"before each\" hook in \"Add method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator.Calculator();",
              "err": {},
              "uuid": "f1a8ca98-f7a3-452c-bf8d-e5f9ba4f4f8a",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Add method unit testing:\"",
              "fullTitle": "Add method unit testing: \"after each\" hook in \"Add method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = null;",
              "err": {},
              "uuid": "823a2d4c-8b05-4f7a-8d57-57ac7a325cb9",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 15 when called: add(7,8)",
              "fullTitle": "Add method unit testing: should return 15 when called: add(7,8)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(7,8)).to.equal(15);",
              "err": {},
              "uuid": "f6ef728a-1c34-4c52-9603-c3a023dfcb98",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -1 when called: add(7,-8)",
              "fullTitle": "Add method unit testing: should return -1 when called: add(7,-8)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(7,-8)).to.equal(-1);",
              "err": {},
              "uuid": "82fd3aea-1ae6-488b-ab8b-0213e7551dfd",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when called: add(-7,8)",
              "fullTitle": "Add method unit testing: should return 1 when called: add(-7,8)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(-7,8)).to.equal(1);",
              "err": {},
              "uuid": "cb2ed014-1a7d-41c6-874f-82f14ab0d792",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -15 when called: add(-7,-8)",
              "fullTitle": "Add method unit testing: should return -15 when called: add(-7,-8)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.add(-7,-8)).to.equal(-15);",
              "err": {},
              "uuid": "c90ff32c-ba33-41c9-a284-acbccade0e24",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: add(152,\"14\")",
              "fullTitle": "Add method unit testing: should return Error when called: add(152,\"14\")",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.add(152, \"14\");       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "cfc62872-1942-4b5c-bd53-6d61f4ac3921",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: add(\"152\",14)",
              "fullTitle": "Add method unit testing: should return Error when called: add(\"152\",14)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.add(\"152\", 14);       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "9d8d5805-76f3-4ab8-8304-12bebbb4f406",
              "parentUUID": "e55351e5-f5f0-4f94-8600-457f4674c19d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6ef728a-1c34-4c52-9603-c3a023dfcb98",
            "82fd3aea-1ae6-488b-ab8b-0213e7551dfd",
            "cb2ed014-1a7d-41c6-874f-82f14ab0d792",
            "c90ff32c-ba33-41c9-a284-acbccade0e24",
            "cfc62872-1942-4b5c-bd53-6d61f4ac3921",
            "9d8d5805-76f3-4ab8-8304-12bebbb4f406"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0095867f-5fad-445a-9796-bf45eca6eff0",
          "title": "Divide method unit testing:",
          "fullFile": "D:\\!EPAM'S_COURSES\\GIT_TRAIN\\Auto-JS-2021\\hw_test1\\test\\specs\\divideCalculator.spec.js",
          "file": "\\hw_test1\\test\\specs\\divideCalculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Divide method unit testing:\"",
              "fullTitle": "Divide method unit testing: \"before each\" hook in \"Divide method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator.Calculator();",
              "err": {},
              "uuid": "66272cd8-edff-487a-9917-bb3cf037c9ae",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Divide method unit testing:\"",
              "fullTitle": "Divide method unit testing: \"after each\" hook in \"Divide method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = null;",
              "err": {},
              "uuid": "d773ab2b-e233-48e9-957e-c80954afeee3",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 1 when called: divide(5,5)",
              "fullTitle": "Divide method unit testing: should return 1 when called: divide(5,5)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(5,5)).to.equal(1);",
              "err": {},
              "uuid": "3d9e9a4b-7dcb-4ebc-99f6-3b2997815064",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -10 when called: divide(-20,2)",
              "fullTitle": "Divide method unit testing: should return -10 when called: divide(-20,2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(-20,2)).to.equal(-10);",
              "err": {},
              "uuid": "2cd7b280-b2cf-46eb-817c-5303981a86a6",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 10 when called: divide(-20,-2)",
              "fullTitle": "Divide method unit testing: should return 10 when called: divide(-20,-2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(-20,-2)).to.equal(10);",
              "err": {},
              "uuid": "0fc8769a-8c54-4b6f-bf0b-cb2fc2878bcf",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 when called: divide(-0,2)",
              "fullTitle": "Divide method unit testing: should return 0 when called: divide(-0,2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(-0,2)).to.equal(0);",
              "err": {},
              "uuid": "23e586e8-07d5-4f42-9718-f90cac50030d",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -10 when called: divide(20,-2)",
              "fullTitle": "Divide method unit testing: should return -10 when called: divide(20,-2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(20,-2)).to.equal(-10);",
              "err": {},
              "uuid": "c6c0c40e-d062-49a7-9eec-2cf682d6b819",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 3.5 when called: divide(21,6)",
              "fullTitle": "Divide method unit testing: should return 3.5 when called: divide(21,6)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(21, 6)).to.equal(3.5);",
              "err": {},
              "uuid": "b092034c-fd5b-44ae-aabc-88b44b38b55b",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0.46153846153846156 when called: divide(12,26)",
              "fullTitle": "Divide method unit testing: should return 0.46153846153846156 when called: divide(12,26)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(12,26)).to.equal(0.46153846153846156);",
              "err": {},
              "uuid": "0a12a297-0360-48fb-ab19-27b07df39a68",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -0.46153846153846156 when called: divide(12,-26)",
              "fullTitle": "Divide method unit testing: should return -0.46153846153846156 when called: divide(12,-26)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.divide(12,-26)).to.equal(-0.46153846153846156);",
              "err": {},
              "uuid": "798d1966-d6ee-4cbb-a092-da7163ada5c2",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: divide(20,0)",
              "fullTitle": "Divide method unit testing: should return Error when called: divide(20,0)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () => calculator.divide(20, 0);\nexpect(message).to.throw(\"Cannot divide by zero\");",
              "err": {},
              "uuid": "e14b5d05-08ec-4238-bbf6-6924a13f53a2",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: divide(20,\"10\")",
              "fullTitle": "Divide method unit testing: should return Error when called: divide(20,\"10\")",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () => calculator.divide(20, \"10\");\nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "d9caaa06-d79f-4b82-883c-ed10e47df7b3",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: divide(\"20\",10)",
              "fullTitle": "Divide method unit testing: should return Error when called: divide(\"20\",10)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () => calculator.divide(\"20\", 10);\nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "3d576a6f-857f-40dc-a80a-263226a5d98b",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: divide(false,10)",
              "fullTitle": "Divide method unit testing: should return Error when called: divide(false,10)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () => calculator.divide(false, 10);\nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "c75ac4ca-d7a5-4a97-8033-5e666de98ca7",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: divide(null,10)",
              "fullTitle": "Divide method unit testing: should return Error when called: divide(null,10)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () => calculator.divide(null, 10);\nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "95d5b617-204a-4477-abdd-2d0d2203e965",
              "parentUUID": "0095867f-5fad-445a-9796-bf45eca6eff0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d9e9a4b-7dcb-4ebc-99f6-3b2997815064",
            "2cd7b280-b2cf-46eb-817c-5303981a86a6",
            "0fc8769a-8c54-4b6f-bf0b-cb2fc2878bcf",
            "23e586e8-07d5-4f42-9718-f90cac50030d",
            "c6c0c40e-d062-49a7-9eec-2cf682d6b819",
            "b092034c-fd5b-44ae-aabc-88b44b38b55b",
            "0a12a297-0360-48fb-ab19-27b07df39a68",
            "798d1966-d6ee-4cbb-a092-da7163ada5c2",
            "e14b5d05-08ec-4238-bbf6-6924a13f53a2",
            "d9caaa06-d79f-4b82-883c-ed10e47df7b3",
            "3d576a6f-857f-40dc-a80a-263226a5d98b",
            "c75ac4ca-d7a5-4a97-8033-5e666de98ca7",
            "95d5b617-204a-4477-abdd-2d0d2203e965"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
          "title": "Multiply method unit testing:",
          "fullFile": "D:\\!EPAM'S_COURSES\\GIT_TRAIN\\Auto-JS-2021\\hw_test1\\test\\specs\\multiplyCalculator.spec.js",
          "file": "\\hw_test1\\test\\specs\\multiplyCalculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Multiply method unit testing:\"",
              "fullTitle": "Multiply method unit testing: \"before each\" hook in \"Multiply method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator.Calculator();",
              "err": {},
              "uuid": "a276f6b8-060e-448e-9fdc-b4d1769e7cc7",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Multiply method unit testing:\"",
              "fullTitle": "Multiply method unit testing: \"after each\" hook in \"Multiply method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = null;",
              "err": {},
              "uuid": "cd69314b-09c6-4693-9874-32e3aba14010",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 25 when called: multiply(5,5)",
              "fullTitle": "Multiply method unit testing: should return 25 when called: multiply(5,5)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(5,5)).to.equal(25);",
              "err": {},
              "uuid": "3c46ee8d-e34c-4c79-abbd-8a27c05e23dd",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 when called: multiply(1,0)",
              "fullTitle": "Multiply method unit testing: should return 0 when called: multiply(1,0)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(0,1)).to.equal(0);",
              "err": {},
              "uuid": "108d8e29-5f19-4b8e-99f0-199527415686",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 when called: multiply(1,-0)",
              "fullTitle": "Multiply method unit testing: should return 0 when called: multiply(1,-0)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(1,-0)).to.equal(0);",
              "err": {},
              "uuid": "3421a572-1838-4c85-8119-e1dd4d4021f9",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 when called: multiply(-1,0)",
              "fullTitle": "Multiply method unit testing: should return 0 when called: multiply(-1,0)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(-1,0)).to.equal(0);",
              "err": {},
              "uuid": "640c4f75-3700-4f36-9aae-bd8b3fecb8e1",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 20 when called: multiply(-10,-2)",
              "fullTitle": "Multiply method unit testing: should return 20 when called: multiply(-10,-2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(-10,-2)).to.equal(20);",
              "err": {},
              "uuid": "01d96e31-4a02-44e7-b1a8-e0271e0e8645",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -20 when called: multiply(10,-2)",
              "fullTitle": "Multiply method unit testing: should return -20 when called: multiply(10,-2)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.multiply(10,-2)).to.equal(-20);",
              "err": {},
              "uuid": "9a2cea7a-f92f-4854-96b9-3411d8f7b846",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0.01 when called: multiply(0.1, 0.1)",
              "fullTitle": "Multiply method unit testing: should return 0.01 when called: multiply(0.1, 0.1)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let result = calculator.multiply(0.1, 0.1)\nexpect(+result.toFixed(2)).to.equal(0.01);",
              "err": {},
              "uuid": "78bb7e58-5c2a-411f-82f0-c01cfa440385",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: multiply(152,\"14\")",
              "fullTitle": "Multiply method unit testing: should return Error when called: multiply(152,\"14\")",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.multiply(152, \"14\");       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "620f7e72-ff32-4e7e-a882-01798f14c394",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: multiply(\"152\",14)",
              "fullTitle": "Multiply method unit testing: should return Error when called: multiply(\"152\",14)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.multiply(152, \"14\");       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "35edba03-49f6-4d61-8065-8af5527e4c49",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: multiply(152,null)",
              "fullTitle": "Multiply method unit testing: should return Error when called: multiply(152,null)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.multiply(152, null);       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "1912d25d-9f43-4f73-8c35-6aedf81d5e1f",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: multiply(152,false)",
              "fullTitle": "Multiply method unit testing: should return Error when called: multiply(152,false)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.multiply(152, false);       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "921acf03-e675-4b92-a778-a803e042a71a",
              "parentUUID": "66775d0b-ff23-4a0b-b2a8-4f8518a9b097",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c46ee8d-e34c-4c79-abbd-8a27c05e23dd",
            "108d8e29-5f19-4b8e-99f0-199527415686",
            "3421a572-1838-4c85-8119-e1dd4d4021f9",
            "640c4f75-3700-4f36-9aae-bd8b3fecb8e1",
            "01d96e31-4a02-44e7-b1a8-e0271e0e8645",
            "9a2cea7a-f92f-4854-96b9-3411d8f7b846",
            "78bb7e58-5c2a-411f-82f0-c01cfa440385",
            "620f7e72-ff32-4e7e-a882-01798f14c394",
            "35edba03-49f6-4d61-8065-8af5527e4c49",
            "1912d25d-9f43-4f73-8c35-6aedf81d5e1f",
            "921acf03-e675-4b92-a778-a803e042a71a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f0f65b08-25fd-4194-89e1-3af1556b115b",
          "title": "Subtract method unit testing:",
          "fullFile": "D:\\!EPAM'S_COURSES\\GIT_TRAIN\\Auto-JS-2021\\hw_test1\\test\\specs\\subtractCalculator.spec.js",
          "file": "\\hw_test1\\test\\specs\\subtractCalculator.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Subtract method unit testing:\"",
              "fullTitle": "Subtract method unit testing: \"before each\" hook in \"Subtract method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = new Calculator.Calculator();",
              "err": {},
              "uuid": "c0821218-c27a-4315-a64c-13e5d4d9efe8",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Subtract method unit testing:\"",
              "fullTitle": "Subtract method unit testing: \"after each\" hook in \"Subtract method unit testing:\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "calculator = null;",
              "err": {},
              "uuid": "c4a834e1-c2ac-4cf4-86bc-6da1d0750a2c",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return 0 when called: subtract(15,15)",
              "fullTitle": "Subtract method unit testing: should return 0 when called: subtract(15,15)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.subtract(15,15)).to.equal(0);",
              "err": {},
              "uuid": "4fb4e1aa-b42a-497c-a57d-d34d7bdee580",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -1 when called: subtract(15,16)",
              "fullTitle": "Subtract method unit testing: should return -1 when called: subtract(15,16)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.subtract(15,16)).to.equal(-1);",
              "err": {},
              "uuid": "d364b4df-d5a0-4d03-b2f0-37d8ba121a97",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 31 when called: subtract(15,-16)",
              "fullTitle": "Subtract method unit testing: should return 31 when called: subtract(15,-16)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.subtract(15,-16)).to.equal(31);",
              "err": {},
              "uuid": "e10df5c7-b564-4267-944d-3943c666a839",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return -31 when called: subtract(-15,16)",
              "fullTitle": "Subtract method unit testing: should return -31 when called: subtract(-15,16)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.subtract(-15,16)).to.equal(-31);",
              "err": {},
              "uuid": "0c04ce9a-8d9d-414b-a3b7-a2ae4b0d5836",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 1 when called: subtract(-15,-16)",
              "fullTitle": "Subtract method unit testing: should return 1 when called: subtract(-15,-16)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(calculator.subtract(-15,-16)).to.equal(1);",
              "err": {},
              "uuid": "a08d8bf5-0302-4f82-9938-18d1c8ea472c",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: subtract(152,false)",
              "fullTitle": "Subtract method unit testing: should return Error when called: subtract(152,false)",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.subtract(152, false);       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "4b351347-064d-4155-a986-00085b4a3a65",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return Error when called: subtract(null,14)",
              "fullTitle": "Subtract method unit testing: should return Error when called: subtract(null,14)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let message = () =>  calculator.subtract(null, 14);       \nexpect(message).to.throw(\"Invalid data type\");",
              "err": {},
              "uuid": "87629d83-6e58-4300-8dde-de69d5d8798a",
              "parentUUID": "f0f65b08-25fd-4194-89e1-3af1556b115b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fb4e1aa-b42a-497c-a57d-d34d7bdee580",
            "d364b4df-d5a0-4d03-b2f0-37d8ba121a97",
            "e10df5c7-b564-4267-944d-3943c666a839",
            "0c04ce9a-8d9d-414b-a3b7-a2ae4b0d5836",
            "a08d8bf5-0302-4f82-9938-18d1c8ea472c",
            "4b351347-064d-4155-a986-00085b4a3a65",
            "87629d83-6e58-4300-8dde-de69d5d8798a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}